背景：
	Facebook认为MVC无法满足他们的扩展需求，由于他们非常巨大的代码库和庞大的组织，使得MVC很快变得非常复复杂，
	每当需要添加一项新的功能或特性时，系统的复杂度就成级数增长，致使代码变得脆弱和不可预测，结果导致他们的MVC正在土崩瓦解。
	认为MVC不适合大规模应用，当系统中有很多的模型和相应的视图时，其复杂度就会迅速扩大，非常难以理解和调试，
	特别是模型和视图间可能存在的双向数据流动 Flux???????????




场景： 简单
	    简单的表述任意时间点你的应用应该是什么样子的，React将会自动的管理UI界面更新当数据发生变化的时候。
         声明式

	在数据发生变化的时候，React从概念上讲与点击了F5一样，实际上它仅仅是更新了变化的一部分而已。
	React是关于构造可重用组件的，实际上，使用React你做的仅仅是构建组建。通过封装，使得组件代码复用、
	测试以及关注点分离更加容易。

原理：传统web: 
		直接操作DOM,更新Dom 耗费性能昂贵
	react : Virtual DOM ：
		轻量级的虚拟的DOM，就是React抽象出来的一个对象；
		由他 去操作更新DOM;
		Diff 算法：是变快的原理；React会等到事件循环结束，计算出 最小的步骤 更新真实的DOM
