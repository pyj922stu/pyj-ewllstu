
 npm:    包管理工具，能解决NodeJS代码部署
		
	允许用户从NPM服务器 下载 别人编写的 第三方包 到本地 使用。
	允许用户从NPM服务器 下载 并安装 别人编写的命令行 程序 到本地使用。
	允许用户将 自己编写的包 或 命令行程序 上传  到NPM服务器 供别人使用。
	
	npm -v  版本显示

	升级，命令
		$ sudo npm install npm -g
		/ usr / local / bin / npm-> /usr/local/lib/node_modules/npm/bin/npm-cli.js
		npm@2.14.2 / usr / local / lib / node_modules / npm

	window下升级：
		npm install npm -g
	
	模块操作命令：
		     $ npm install <Module Name>
		    卸载：$ npm uninstall express  $ npm ls

	Node.js web框架模块 express: ---------------------------------？？？？
				$ npm install express
			更新模块：$ npm update express
			搜索模块：$ npm search express
			创建模块：$ npm init
			最后输入 "yes" 后会生成 package.json 文件。
			发布模块：$npm publish

	包安装：
		npm install express          # 本地安装
		npm install express -g   # 全局安装	
		$ npm config set proxy null（若上安装错误）

	package.json：	
			定义包的属性	

	常用命令：
		npm help可查看所有命令。

		NPM提供了很多命令，例如install和publish，使用npm help可查看所有命令。

		使用npm help <command>可查看某条命令的详细帮助，例如npm help install。

		在package.json所在目录下使用npm install . -g可先在本地安装当前命令行程序，可用于发布前的本地测试。

		使用npm update <package>可以把当前目录下node_modules子目录里边的对应模块更新至最新版本。

		使用npm update <package> -g可以把全局安装的对应命令行程序更新至最新版。

		使用npm cache clear可以清空NPM 本地缓存 ，用于对付使用相同版本号发布新版本代码的人。

		使用npm unpublish <package>@<version>可以撤销发布自己发布过的某个版本代码。





